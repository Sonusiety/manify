name: Test & Format

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:  
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false    # don’t stop the matrix if one Python version fails
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Install base manify
          pip install -e .
          # install manify-dev
          pip install -e ".[dev]"
          # pip install -e ".[utils]"
          # install all extras
          pip install -e ".[all]" 

      - name: Smoke‑test pip install manify
        run: |
          python - <<EOF
          import manify
          print("manify version:", getattr(manify, "__version__", "unknown"))
          EOF

      - name: Check type annotations with MyPy
        run: |
          # only check core modules—skip untyped imports
          mypy --ignore-missing-imports --no-warn-return-any --follow-imports=skip \
            manify/__init__.py manify/embedders manify/predictors manify/manifolds
        continue-on-error: true

      - name: Run unit tests & collect coverage
        run: |
          pytest tests --cov=manify --cov-report=xml:coverage.xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
          verbose: true
          flags: unittests
